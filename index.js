(function evaluate(require, module, exports, process, setImmediate, global, __dirname, __filename, $csbImport) {"use strict";

var now = new Date();
var formatDate = document.querySelector("#current-date");
var minutes = ["00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60"];
var days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
var months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
var currentDate = now.getDate();
var currentHour = now.getHours();
var currentMinutes = minutes[now.getMinutes()];
var currentYear = now.getFullYear();
var currentMonth = months[now.getMonth()];
var currentDay = days[now.getDay()];
formatDate.innerHTML = " ".concat(currentHour, ":").concat(currentMinutes, " ").concat(currentDay, ", ").concat(currentMonth, " ").concat(currentDate, " ").concat(currentYear, " ");

function showTemp(response) {
  console.log(response);
  document.querySelector("#current-city").innerHTML = response.data.name;
  var currentTemperature = Math.round(response.data.main.temp);
  document.querySelector(".dayTemp").innerHTML = "".concat(currentTemperature, "\xB0");
  var currentHumidity = Math.round(response.data.main.humidity);
  document.querySelector("#humidity").innerHTML = "Humidity: ".concat(currentHumidity, "%");
  var currentWindSpeed = Math.round(response.data.wind.speed);
  document.querySelector("#wind-speed").innerHTML = "Wind Speed: ".concat(currentWindSpeed, "mph");
}

function search(event) {
  event.preventDefault();
  var apiKey = "ecd11f3b51cd90d6e501dc2c3b96726e";
  var cityName = document.querySelector("#search-city-input").value;
  var apiUrl = "https://api.openweathermap.org/data/2.5/weather?q=".concat(cityName, "&appid=").concat(apiKey, "&units=metric");
  axios.get(apiUrl).then(showTemp);
}

var currentTemp = document.querySelector("#search-form");
currentTemp.addEventListener("submit", search);

function showPosition(position) {
  var latitude = position.coords.latitude;
  var longitude = position.coords.longitude;
  var apiKey = "ecd11f3b51cd90d6e501dc2c3b96726e";
  var units = "metric";
  var apiUrl = "https://api.openweathermap.org/data/2.5/weather?lat=".concat(latitude, "&lon=").concat(longitude, "&appid=").concat(apiKey, "&units=").concat(units);
  console.log(apiUrl);
  axios.get(apiUrl).then(showTemp);
}

function currentPosition() {
  navigator.geolocation.getCurrentPosition(showPosition);
}

var button = document.querySelector("button");
button.addEventListener("click", currentPosition);

function cConv(event) {
  event.preventDefault();
  var cConversion = document.querySelector(".dayTemp");
  cConversion.innerHTML = "23°";
}

var cLink = document.querySelector("#celcius");
cLink.addEventListener("click", cConv);

function fConv(event) {
  event.preventDefault();
  var fConversion = document.querySelector(".dayTemp");
  fConversion.innerHTML = "73°";
}

var fLink = document.querySelector("#fahrenheit");
fLink.addEventListener("click", fConv);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceURL=https://5t8hv.csb.app/src/index.js
})
